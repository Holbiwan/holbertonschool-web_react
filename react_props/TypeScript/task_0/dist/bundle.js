!function(e){var t={};function n(r){if(t[r])return t[r].exports;var o=t[r]={i:r,l:!1,exports:{}};return e[r].call(o.exports,o,o.exports,n),o.l=!0,o.exports}n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)n.d(r,o,function(t){return e[t]}.bind(null,o));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=0)}([function(e,t){var n=[{first_name:"Teddy",name:"Riner",age:35,location:"Paris"},{first_name:"Rafael",name:"Nadal",age:38,location:"Manacor"}],r=["first_name","location"],o=document.createElement("table"),a=document.createElement("thead"),d=document.createElement("tbody");document.body.appendChild(o),o.appendChild(a),o.appendChild(d);for(var l=0;l<r.length;l++){var c=document.createElement("th");c.appendChild(document.createTextNode(""+r[l])),a.appendChild(c)}for(l=0;l<n.length;l++){var i=document.createElement("tr");d.appendChild(i);for(var u=[n[l].first_name,n[l].location],f=0;f<u.length;f++){var p=document.createElement("td");p.appendChild(document.createTextNode(""+u[f])),i.appendChild(p)}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vLy4vanMvbWFpbi50cyJdLCJuYW1lcyI6WyJpbnN0YWxsZWRNb2R1bGVzIiwiX193ZWJwYWNrX3JlcXVpcmVfXyIsIm1vZHVsZUlkIiwiZXhwb3J0cyIsIm1vZHVsZSIsImkiLCJsIiwibW9kdWxlcyIsImNhbGwiLCJtIiwiYyIsImQiLCJuYW1lIiwiZ2V0dGVyIiwibyIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZW51bWVyYWJsZSIsImdldCIsInIiLCJTeW1ib2wiLCJ0b1N0cmluZ1RhZyIsInZhbHVlIiwidCIsIm1vZGUiLCJfX2VzTW9kdWxlIiwibnMiLCJjcmVhdGUiLCJrZXkiLCJiaW5kIiwibiIsIm9iamVjdCIsInByb3BlcnR5IiwicHJvdG90eXBlIiwiaGFzT3duUHJvcGVydHkiLCJwIiwicyIsInN0dWRlbnRzTGlzdCIsImZpcnN0X25hbWUiLCJhZ2UiLCJsb2NhdGlvbiIsImxhYmVscyIsInRhYmxlIiwiZG9jdW1lbnQiLCJjcmVhdGVFbGVtZW50IiwidGhlYWQiLCJ0Ym9keSIsImJvZHkiLCJhcHBlbmRDaGlsZCIsImxlbmd0aCIsInRoIiwiY3JlYXRlVGV4dE5vZGUiLCJ0ciIsInZhbHVlcyIsImoiLCJ0ZCJdLCJtYXBwaW5ncyI6ImFBQ0UsSUFBSUEsRUFBbUIsR0FHdkIsU0FBU0MsRUFBb0JDLEdBRzVCLEdBQUdGLEVBQWlCRSxHQUNuQixPQUFPRixFQUFpQkUsR0FBVUMsUUFHbkMsSUFBSUMsRUFBU0osRUFBaUJFLEdBQVksQ0FDekNHLEVBQUdILEVBQ0hJLEdBQUcsRUFDSEgsUUFBUyxJQVVWLE9BTkFJLEVBQVFMLEdBQVVNLEtBQUtKLEVBQU9ELFFBQVNDLEVBQVFBLEVBQU9ELFFBQVNGLEdBRy9ERyxFQUFPRSxHQUFJLEVBR0pGLEVBQU9ELFFBS2ZGLEVBQW9CUSxFQUFJRixFQUd4Qk4sRUFBb0JTLEVBQUlWLEVBR3hCQyxFQUFvQlUsRUFBSSxTQUFTUixFQUFTUyxFQUFNQyxHQUMzQ1osRUFBb0JhLEVBQUVYLEVBQVNTLElBQ2xDRyxPQUFPQyxlQUFlYixFQUFTUyxFQUFNLENBQUVLLFlBQVksRUFBTUMsSUFBS0wsS0FLaEVaLEVBQW9Ca0IsRUFBSSxTQUFTaEIsR0FDWCxvQkFBWGlCLFFBQTBCQSxPQUFPQyxhQUMxQ04sT0FBT0MsZUFBZWIsRUFBU2lCLE9BQU9DLFlBQWEsQ0FBRUMsTUFBTyxXQUU3RFAsT0FBT0MsZUFBZWIsRUFBUyxhQUFjLENBQUVtQixPQUFPLEtBUXZEckIsRUFBb0JzQixFQUFJLFNBQVNELEVBQU9FLEdBRXZDLEdBRFUsRUFBUEEsSUFBVUYsRUFBUXJCLEVBQW9CcUIsSUFDL0IsRUFBUEUsRUFBVSxPQUFPRixFQUNwQixHQUFXLEVBQVBFLEdBQThCLGlCQUFWRixHQUFzQkEsR0FBU0EsRUFBTUcsV0FBWSxPQUFPSCxFQUNoRixJQUFJSSxFQUFLWCxPQUFPWSxPQUFPLE1BR3ZCLEdBRkExQixFQUFvQmtCLEVBQUVPLEdBQ3RCWCxPQUFPQyxlQUFlVSxFQUFJLFVBQVcsQ0FBRVQsWUFBWSxFQUFNSyxNQUFPQSxJQUN0RCxFQUFQRSxHQUE0QixpQkFBVEYsRUFBbUIsSUFBSSxJQUFJTSxLQUFPTixFQUFPckIsRUFBb0JVLEVBQUVlLEVBQUlFLEVBQUssU0FBU0EsR0FBTyxPQUFPTixFQUFNTSxJQUFRQyxLQUFLLEtBQU1ELElBQzlJLE9BQU9GLEdBSVJ6QixFQUFvQjZCLEVBQUksU0FBUzFCLEdBQ2hDLElBQUlTLEVBQVNULEdBQVVBLEVBQU9xQixXQUM3QixXQUF3QixPQUFPckIsRUFBZ0IsU0FDL0MsV0FBOEIsT0FBT0EsR0FFdEMsT0FEQUgsRUFBb0JVLEVBQUVFLEVBQVEsSUFBS0EsR0FDNUJBLEdBSVJaLEVBQW9CYSxFQUFJLFNBQVNpQixFQUFRQyxHQUFZLE9BQU9qQixPQUFPa0IsVUFBVUMsZUFBZTFCLEtBQUt1QixFQUFRQyxJQUd6Ry9CLEVBQW9Ca0MsRUFBSSxHQUlqQmxDLEVBQW9CQSxFQUFvQm1DLEVBQUksRyxnQkN6RXJELElBZ0JNQyxFQUErQixDQWhCWCxDQUN0QkMsV0FBWSxRQUNaMUIsS0FBTSxRQUNOMkIsSUFBSyxHQUNMQyxTQUFVLFNBSVksQ0FDdEJGLFdBQVksU0FDWjFCLEtBQU0sUUFDTjJCLElBQUssR0FDTEMsU0FBVSxZQU9SQyxFQUFtQixDQUFDLGFBQWMsWUFHbENDLEVBQTBCQyxTQUFTQyxjQUFjLFNBR2pEQyxFQUFpQ0YsU0FBU0MsY0FBYyxTQUN4REUsRUFBaUNILFNBQVNDLGNBQWMsU0FHOURELFNBQVNJLEtBQUtDLFlBQVlOLEdBQzFCQSxFQUFNTSxZQUFZSCxHQUNsQkgsRUFBTU0sWUFBWUYsR0FHbEIsSUFBSyxJQUFJekMsRUFBWSxFQUFHQSxFQUFJb0MsRUFBT1EsT0FBUTVDLElBQUssQ0FDNUMsSUFBTTZDLEVBQTJCUCxTQUFTQyxjQUFjLE1BQ3hETSxFQUFHRixZQUFZTCxTQUFTUSxlQUFlLEdBQUdWLEVBQU9wQyxLQUNqRHdDLEVBQU1HLFlBQVlFLEdBSXRCLElBQVM3QyxFQUFZLEVBQUdBLEVBQUlnQyxFQUFhWSxPQUFRNUMsSUFBSyxDQUNsRCxJQUFNK0MsRUFBMEJULFNBQVNDLGNBQWMsTUFDdkRFLEVBQU1FLFlBQVlJLEdBU2xCLElBTkEsSUFBTUMsRUFBbUIsQ0FDckJoQixFQUFhaEMsR0FBR2lDLFdBQ2hCRCxFQUFhaEMsR0FBR21DLFVBSVhjLEVBQVksRUFBR0EsRUFBSUQsRUFBT0osT0FBUUssSUFBSyxDQUM1QyxJQUFNQyxFQUEyQlosU0FBU0MsY0FBYyxNQUN4RFcsRUFBR1AsWUFBWUwsU0FBU1EsZUFBZSxHQUFHRSxFQUFPQyxLQUNqREYsRUFBR0osWUFBWU8iLCJmaWxlIjoiYnVuZGxlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiIFx0Ly8gVGhlIG1vZHVsZSBjYWNoZVxuIFx0dmFyIGluc3RhbGxlZE1vZHVsZXMgPSB7fTtcblxuIFx0Ly8gVGhlIHJlcXVpcmUgZnVuY3Rpb25cbiBcdGZ1bmN0aW9uIF9fd2VicGFja19yZXF1aXJlX18obW9kdWxlSWQpIHtcblxuIFx0XHQvLyBDaGVjayBpZiBtb2R1bGUgaXMgaW4gY2FjaGVcbiBcdFx0aWYoaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0pIHtcbiBcdFx0XHRyZXR1cm4gaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0uZXhwb3J0cztcbiBcdFx0fVxuIFx0XHQvLyBDcmVhdGUgYSBuZXcgbW9kdWxlIChhbmQgcHV0IGl0IGludG8gdGhlIGNhY2hlKVxuIFx0XHR2YXIgbW9kdWxlID0gaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0gPSB7XG4gXHRcdFx0aTogbW9kdWxlSWQsXG4gXHRcdFx0bDogZmFsc2UsXG4gXHRcdFx0ZXhwb3J0czoge31cbiBcdFx0fTtcblxuIFx0XHQvLyBFeGVjdXRlIHRoZSBtb2R1bGUgZnVuY3Rpb25cbiBcdFx0bW9kdWxlc1ttb2R1bGVJZF0uY2FsbChtb2R1bGUuZXhwb3J0cywgbW9kdWxlLCBtb2R1bGUuZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXyk7XG5cbiBcdFx0Ly8gRmxhZyB0aGUgbW9kdWxlIGFzIGxvYWRlZFxuIFx0XHRtb2R1bGUubCA9IHRydWU7XG5cbiBcdFx0Ly8gUmV0dXJuIHRoZSBleHBvcnRzIG9mIHRoZSBtb2R1bGVcbiBcdFx0cmV0dXJuIG1vZHVsZS5leHBvcnRzO1xuIFx0fVxuXG5cbiBcdC8vIGV4cG9zZSB0aGUgbW9kdWxlcyBvYmplY3QgKF9fd2VicGFja19tb2R1bGVzX18pXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLm0gPSBtb2R1bGVzO1xuXG4gXHQvLyBleHBvc2UgdGhlIG1vZHVsZSBjYWNoZVxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5jID0gaW5zdGFsbGVkTW9kdWxlcztcblxuIFx0Ly8gZGVmaW5lIGdldHRlciBmdW5jdGlvbiBmb3IgaGFybW9ueSBleHBvcnRzXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmQgPSBmdW5jdGlvbihleHBvcnRzLCBuYW1lLCBnZXR0ZXIpIHtcbiBcdFx0aWYoIV9fd2VicGFja19yZXF1aXJlX18ubyhleHBvcnRzLCBuYW1lKSkge1xuIFx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBuYW1lLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZ2V0dGVyIH0pO1xuIFx0XHR9XG4gXHR9O1xuXG4gXHQvLyBkZWZpbmUgX19lc01vZHVsZSBvbiBleHBvcnRzXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLnIgPSBmdW5jdGlvbihleHBvcnRzKSB7XG4gXHRcdGlmKHR5cGVvZiBTeW1ib2wgIT09ICd1bmRlZmluZWQnICYmIFN5bWJvbC50b1N0cmluZ1RhZykge1xuIFx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBTeW1ib2wudG9TdHJpbmdUYWcsIHsgdmFsdWU6ICdNb2R1bGUnIH0pO1xuIFx0XHR9XG4gXHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCAnX19lc01vZHVsZScsIHsgdmFsdWU6IHRydWUgfSk7XG4gXHR9O1xuXG4gXHQvLyBjcmVhdGUgYSBmYWtlIG5hbWVzcGFjZSBvYmplY3RcbiBcdC8vIG1vZGUgJiAxOiB2YWx1ZSBpcyBhIG1vZHVsZSBpZCwgcmVxdWlyZSBpdFxuIFx0Ly8gbW9kZSAmIDI6IG1lcmdlIGFsbCBwcm9wZXJ0aWVzIG9mIHZhbHVlIGludG8gdGhlIG5zXG4gXHQvLyBtb2RlICYgNDogcmV0dXJuIHZhbHVlIHdoZW4gYWxyZWFkeSBucyBvYmplY3RcbiBcdC8vIG1vZGUgJiA4fDE6IGJlaGF2ZSBsaWtlIHJlcXVpcmVcbiBcdF9fd2VicGFja19yZXF1aXJlX18udCA9IGZ1bmN0aW9uKHZhbHVlLCBtb2RlKSB7XG4gXHRcdGlmKG1vZGUgJiAxKSB2YWx1ZSA9IF9fd2VicGFja19yZXF1aXJlX18odmFsdWUpO1xuIFx0XHRpZihtb2RlICYgOCkgcmV0dXJuIHZhbHVlO1xuIFx0XHRpZigobW9kZSAmIDQpICYmIHR5cGVvZiB2YWx1ZSA9PT0gJ29iamVjdCcgJiYgdmFsdWUgJiYgdmFsdWUuX19lc01vZHVsZSkgcmV0dXJuIHZhbHVlO1xuIFx0XHR2YXIgbnMgPSBPYmplY3QuY3JlYXRlKG51bGwpO1xuIFx0XHRfX3dlYnBhY2tfcmVxdWlyZV9fLnIobnMpO1xuIFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkobnMsICdkZWZhdWx0JywgeyBlbnVtZXJhYmxlOiB0cnVlLCB2YWx1ZTogdmFsdWUgfSk7XG4gXHRcdGlmKG1vZGUgJiAyICYmIHR5cGVvZiB2YWx1ZSAhPSAnc3RyaW5nJykgZm9yKHZhciBrZXkgaW4gdmFsdWUpIF9fd2VicGFja19yZXF1aXJlX18uZChucywga2V5LCBmdW5jdGlvbihrZXkpIHsgcmV0dXJuIHZhbHVlW2tleV07IH0uYmluZChudWxsLCBrZXkpKTtcbiBcdFx0cmV0dXJuIG5zO1xuIFx0fTtcblxuIFx0Ly8gZ2V0RGVmYXVsdEV4cG9ydCBmdW5jdGlvbiBmb3IgY29tcGF0aWJpbGl0eSB3aXRoIG5vbi1oYXJtb255IG1vZHVsZXNcbiBcdF9fd2VicGFja19yZXF1aXJlX18ubiA9IGZ1bmN0aW9uKG1vZHVsZSkge1xuIFx0XHR2YXIgZ2V0dGVyID0gbW9kdWxlICYmIG1vZHVsZS5fX2VzTW9kdWxlID9cbiBcdFx0XHRmdW5jdGlvbiBnZXREZWZhdWx0KCkgeyByZXR1cm4gbW9kdWxlWydkZWZhdWx0J107IH0gOlxuIFx0XHRcdGZ1bmN0aW9uIGdldE1vZHVsZUV4cG9ydHMoKSB7IHJldHVybiBtb2R1bGU7IH07XG4gXHRcdF9fd2VicGFja19yZXF1aXJlX18uZChnZXR0ZXIsICdhJywgZ2V0dGVyKTtcbiBcdFx0cmV0dXJuIGdldHRlcjtcbiBcdH07XG5cbiBcdC8vIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbFxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5vID0gZnVuY3Rpb24ob2JqZWN0LCBwcm9wZXJ0eSkgeyByZXR1cm4gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iamVjdCwgcHJvcGVydHkpOyB9O1xuXG4gXHQvLyBfX3dlYnBhY2tfcHVibGljX3BhdGhfX1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5wID0gXCJcIjtcblxuXG4gXHQvLyBMb2FkIGVudHJ5IG1vZHVsZSBhbmQgcmV0dXJuIGV4cG9ydHNcbiBcdHJldHVybiBfX3dlYnBhY2tfcmVxdWlyZV9fKF9fd2VicGFja19yZXF1aXJlX18ucyA9IDApO1xuIiwiLy8gRGVjbGFyYXRpb24gb2YgdGhlIFN0dWRlbnQgaW50ZXJmYWNlIHdpdGggdGhlIHJlcXVpcmVkIHByb3BlcnRpZXNcbmludGVyZmFjZSBTdHVkZW50IHtcbiAgICBmaXJzdF9uYW1lOiBzdHJpbmc7XG4gICAgbmFtZTogc3RyaW5nO1xuICAgIGFnZTogbnVtYmVyO1xuICAgIGxvY2F0aW9uOiBzdHJpbmc7XG59XG5cbi8vIENyZWF0aW5nIHRoZSBmaXJzdCBzdHVkZW50IG9iamVjdCBhY2NvcmRpbmcgdG8gdGhlIFN0dWRlbnQgaW50ZXJmYWNlXG5jb25zdCBzdHVkZW50MTogU3R1ZGVudCA9IHtcbiAgICBmaXJzdF9uYW1lOiAnVGVkZHknLFxuICAgIG5hbWU6ICdSaW5lcicsXG4gICAgYWdlOiAzNSxcbiAgICBsb2NhdGlvbjogJ1BhcmlzJyxcbn07XG5cbi8vIENyZWF0aW5nIHRoZSBzZWNvbmQgc3R1ZGVudCBvYmplY3QgYWNjb3JkaW5nIHRvIHRoZSBTdHVkZW50IGludGVyZmFjZVxuY29uc3Qgc3R1ZGVudDI6IFN0dWRlbnQgPSB7XG4gICAgZmlyc3RfbmFtZTogJ1JhZmFlbCcsXG4gICAgbmFtZTogJ05hZGFsJyxcbiAgICBhZ2U6IDM4LFxuICAgIGxvY2F0aW9uOiAnTWFuYWNvcicsXG59O1xuXG4vLyBDcmVhdGluZyBhIGxpc3Qgb2Ygc3R1ZGVudHMgY29udGFpbmluZyB0aGUgdHdvIHN0dWRlbnQgb2JqZWN0cyBkZWZpbmVkIGFib3ZlXG5jb25zdCBzdHVkZW50c0xpc3Q6IEFycmF5PFN0dWRlbnQ+ID0gW3N0dWRlbnQxLCBzdHVkZW50Ml07XG5cbi8vIERlZmluaW5nIHRoZSBsYWJlbHMgZm9yIHRoZSB0YWJsZSBjb2x1bW5zXG5jb25zdCBsYWJlbHM6IHN0cmluZ1tdID0gW1wiZmlyc3RfbmFtZVwiLCBcImxvY2F0aW9uXCJdO1xuXG4vLyBDcmVhdGluZyBhbiBIVE1MIHRhYmxlIGVsZW1lbnRcbmNvbnN0IHRhYmxlOiBIVE1MVGFibGVFbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInRhYmxlXCIpO1xuXG4vLyBDcmVhdGluZyB0YWJsZSBzZWN0aW9uczogdGhlYWQgZm9yIHRoZSBoZWFkZXIgYW5kIHRib2R5IGZvciB0aGUgYm9keVxuY29uc3QgdGhlYWQ6IEhUTUxUYWJsZVNlY3Rpb25FbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInRoZWFkXCIpO1xuY29uc3QgdGJvZHk6IEhUTUxUYWJsZVNlY3Rpb25FbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInRib2R5XCIpO1xuXG4vLyBBcHBlbmRpbmcgdGhlIHRhYmxlIHRvIHRoZSBIVE1MIGRvY3VtZW50IGJvZHlcbmRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQodGFibGUpO1xudGFibGUuYXBwZW5kQ2hpbGQodGhlYWQpO1xudGFibGUuYXBwZW5kQ2hpbGQodGJvZHkpO1xuXG4vLyBBZGRpbmcgY29sdW1uIGhlYWRlcnMgdG8gdGhlIHRhYmxlIHVzaW5nIHRoZSBkZWZpbmVkIGxhYmVsc1xuZm9yIChsZXQgaTogbnVtYmVyID0gMDsgaSA8IGxhYmVscy5sZW5ndGg7IGkrKykge1xuICAgIGNvbnN0IHRoOiBIVE1MVGFibGVDZWxsRWxlbWVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJ0aFwiKTtcbiAgICB0aC5hcHBlbmRDaGlsZChkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZShgJHtsYWJlbHNbaV19YCkpO1xuICAgIHRoZWFkLmFwcGVuZENoaWxkKHRoKTtcbn1cblxuLy8gQWRkaW5nIHRoZSBzdHVkZW50cycgZGF0YSB0byB0aGUgdGFibGVcbmZvciAobGV0IGk6IG51bWJlciA9IDA7IGkgPCBzdHVkZW50c0xpc3QubGVuZ3RoOyBpKyspIHtcbiAgICBjb25zdCB0cjogSFRNTFRhYmxlUm93RWxlbWVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJ0clwiKTtcbiAgICB0Ym9keS5hcHBlbmRDaGlsZCh0cik7XG4gICAgXG4gICAgLy8gRXh0cmFjdGluZyBzcGVjaWZpYyB2YWx1ZXMgdG8gZGlzcGxheSAoZmlyc3RfbmFtZSBhbmQgbG9jYXRpb24pXG4gICAgY29uc3QgdmFsdWVzOiBzdHJpbmdbXSA9IFtcbiAgICAgICAgc3R1ZGVudHNMaXN0W2ldLmZpcnN0X25hbWUsXG4gICAgICAgIHN0dWRlbnRzTGlzdFtpXS5sb2NhdGlvbixcbiAgICBdO1xuXG4gICAgLy8gQWRkaW5nIHRoZSB2YWx1ZXMgdG8gdGhlIHRhYmxlIHJvd1xuICAgIGZvciAobGV0IGo6IG51bWJlciA9IDA7IGogPCB2YWx1ZXMubGVuZ3RoOyBqKyspIHtcbiAgICAgICAgY29uc3QgdGQ6IEhUTUxUYWJsZUNlbGxFbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInRkXCIpO1xuICAgICAgICB0ZC5hcHBlbmRDaGlsZChkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZShgJHt2YWx1ZXNbal19YCkpO1xuICAgICAgICB0ci5hcHBlbmRDaGlsZCh0ZCk7XG4gICAgfVxufVxuIl0sInNvdXJjZVJvb3QiOiIifQ==